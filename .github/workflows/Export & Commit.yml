name: export & commit

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Solution to export'
        required: true
        default: 'ALMDemo'
      solution_description:
        description: 'Commit message'
        required: true
        default: ''
      related_to_issue:
        description: 'Related to issue e.g. #1, #2, #3'
        required: false
        default: ''
      type_of_import:
        description: 'Upgrade or Update'
        type: 'choice'
        required: true
        options: 
        - 'upgrade'
        - 'update'
        default: 'update'
      branch:
        description: 'Branch to commit to'
        type: 'choice'
        required: true
        options: 
        - 'main'
        - 'hotfix'
        

jobs:
  export-and-create-pr:
    runs-on: ubuntu-latest

    environment:
      name: dev
      url: 'https://dev-christian.crm4.dynamics.com/'   

    env:
      RUNNER_DEBUG: 1
      SOLUTION_TARGET_FOLDER: PowerPlatform/Solutions/

    steps:
      - uses: actions/checkout@v4

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: call-deploy-workflow
          client-payload: '{"solution_name": "${{ github.event.inputs.solution_name }}", "type_of_import": "${{ github.event.inputs.type_of_import }}"}'

      - name: Process issues input
        run: |
          if [ -n "${{ github.event.inputs.related_to_issue }}" ]; then
            issues_input="($(echo "${{ github.event.inputs.related_to_issue }}" | sed 's/ *, */, /g'))"
            echo "issues=$issues_input" >> $GITHUB_ENV 
          else
            echo 'issues=""' >> $GITHUB_ENV
          fi

      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Publish Solution
        uses: microsoft/powerplatform-actions/publish-solution@v1
        with:
          environment-url: ${{ vars.DEV_ENVIRONMENT_URL }}
          app-id: ${{ vars.CLIENTIDALMDEV }}
          client-secret: ${{ secrets.CLIENTSECRETALMDEV }}
          tenant-id: ${{ vars.TENANTID }}

      - name: Export Solution - Unmanaged
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ vars.DEV_ENVIRONMENT_URL }}
          app-id: ${{ vars.CLIENTIDALMDEV }}
          client-secret: ${{ secrets.CLIENTSECRETALMDEV }}
          tenant-id: ${{ vars.TENANTID }}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{runner.temp}}/exported/${{ github.event.inputs.solution_name }}.zip
          managed: false
          run-asynchronously: true
          overwrite: true

      - name: Export Solution - Managed
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ vars.DEV_ENVIRONMENT_URL }}
          app-id: ${{ vars.CLIENTIDALMDEV }}
          client-secret: ${{ secrets.CLIENTSECRETALMDEV }}
          tenant-id: ${{ vars.TENANTID }}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{runner.temp}}/exported/${{ github.event.inputs.solution_name }}_managed.zip
          managed: true
          run-asynchronously: true
          overwrite: true

      - name: Create solution folder
        run: mkdir -p ${{ github.workspace }}/${{ github.event.inputs.solution_name }}/SolutionPackage

      - name: Unpack solution
        uses: microsoft/powerplatform-actions/unpack-solution@v1
        with:
          solution-file: ${{runner.temp}}/exported/${{ github.event.inputs.solution_name }}.zip
          solution-folder: ${{ github.workspace }}/${{ github.event.inputs.solution_name }}/SolutionPackage
          solution-type: 'Both'
          overwrite-files: true

      - name: Commit Changes to Repo
        run: |
          git config user.email "<>"
          git config user.name "${{github.triggering_actor}}"
          git add --all
          git commit -m "${{ github.event.inputs.solution_description }} ${{ env.issues }}"
          git push origin main

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: build-and-deploy-event
          client-payload: '{"solution_name": "${{ github.event.inputs.solution_name }}", "type_of_import": "${{ github.event.inputs.type_of_import }}"}'
