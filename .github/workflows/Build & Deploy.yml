name: 02. Build & Deploy

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Solution to export'
        required: true
        default: 'ALMDemo'
      type_of_import:
        description: 'Upgrade or Update'
        type: 'choice'
        required: true
        options: 
        - 'upgrade'
        - 'update'
        default: 'update'


env:
  RUNNER_DEBUG: 1
  SOLUTION_TARGET_FOLDER: PowerPlatform/Solutions/

jobs:
  build-and-stage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Get current timestamp
        id: timestamp
        run: echo "timestamp=$(date -u +"%d%m%YT%H%M")" >> $GITHUB_ENV

      - name: Set upgrade flag
        run: echo "is_upgrade=$([[ '${{ github.event.inputs.type_of_import }}' == 'upgrade' ]] && echo true || echo false)" >> $GITHUB_ENV
        
      - name: Pack Solution
        uses: microsoft/powerplatform-actions/pack-solution@v1
        with:
          solution-folder: ${{ github.workspace }}/${{ github.event.inputs.solution_name }}/SolutionPackage
          solution-file: ${{runner.temp}}/packed/${{ github.event.inputs.solution_name }}_managed.zip
          solution-type: 'Managed'
      
      - name: Import solution as unmanaged to build environment
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{ vars.BUILD_ENVIRONMENT_URL }}
          app-id: ${{ vars.CLIENTIDALMDEV }}
          client-secret: ${{ secrets.CLIENTSECRETALMDEV }}
          tenant-id: ${{ vars.TENANTID }}
          solution-file: ${{runner.temp}}/packed/${{ github.event.inputs.solution_name }}_managed.zip
          force-overwrite: ${{ env.IS_UPGRADE }}
          publish-changes: false
          run-asynchronously: false
          activate-plugins: false
          stage-and-upgrade: ${{ env.is_upgrade }}

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: drop
          path: '${{runner.temp}}/packed/**'
          overwrite: true

  release-to-test:
    needs: [build-and-stage]
    runs-on: ubuntu-latest

    environment:
     name: test
     url: 'https://test-christian.crm4.dynamics.com/'

    steps:
    - uses: actions/checkout@v4
    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        path: '${{runner.temp}}/artifacts'
        name: 'drop'

    - name: Set upgrade flag
      run: echo "is_upgrade=$([[ '${{ github.event.inputs.type_of_import }}' == 'upgrade' ]] && echo true || echo false)" >> $GITHUB_ENV

    - name: Import solution to Test
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ vars.TEST_ENVIRONMENT_URL }}
        app-id: ${{ vars.TEST_CLIENT_ID }}
        client-secret: ${{ secrets.TEST_CLIENT_SECRET }}
        tenant-id: ${{ vars.TENANTID }}
        solution-file: '${{runner.temp}}/artifacts/${{ github.event.inputs.solution_name }}_managed.zip'
        force-overwrite: ${{ env.IS_UPGRADE }}
        publish-changes: true
        activate-plugins: true
        run-asynchronously: true # endre til true etter testing
        stage-and-upgrade: ${{ env.is_upgrade }}

  release-to-prod:
    needs: [release-to-test]
    runs-on: ubuntu-latest

    environment:
     name: prod
     url: 'https://org693bed5b.crm4.dynamics.com/'

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.inputs.solution_name }}
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v4

    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        path: '${{runner.temp}}/artifacts'
        name: 'drop'

    - name: Set upgrade flag
      run: echo "is_upgrade=$([[ '${{ github.event.inputs.type_of_import }}' == 'upgrade' ]] && echo true || echo false)" >> $GITHUB_ENV

    - name: Import solution to Test
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ vars.PROD_ENVIRONMENT_URL }}
        app-id: ${{ vars.PROD_CLIENT_ID }}
        client-secret: ${{ secrets.PROD_CLIENT_SECRET }}
        tenant-id: ${{ vars.TENANTID }}
        solution-file: '${{runner.temp}}/artifacts/${{ github.event.inputs.solution_name }}_managed.zip'
        force-overwrite: ${{ env.IS_UPGRADE }}
        publish-changes: true
        activate-plugins: true
        run-asynchronously: true # endre til true etter testing
        stage-and-upgrade: ${{ env.is_upgrade }}
