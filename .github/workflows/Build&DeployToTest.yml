name: 02. Build and Deploy to Test

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths-ignore:
      - '.github/workflows/**'

env:
  RUNNER_DEBUG: 1
  SOLUTION_EXPORTED_FOLDER: out/exported/
  SOLUTION_FOLDER: out/solutions/
  SOLUTION_TARGET_FOLDER: solutions/
  SOLUTION_TARGET_FOLDER_NAME: ALMDemo

jobs:
  convert-to-managed:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1
      
      - name: Extract feature branch from commit message
        run: |
          # Fjerne linjeskift og hente ut siste ordet fra commit-meldingen
          FEATURE_BRANCH=$(echo "${{ github.event.head_commit.message }}" | tr -d '\n' | awk '{print $NF}')
          echo "solution_name=$FEATURE_BRANCH" >> $GITHUB_ENV

      - name: Print solution name
        run: echo "The solution name is ${{ env.solution_name }}"

      - name: Import solution as unmanaged to build environment
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
        # app reg in test
          environment-url: ${{ vars.TEST_ENVIRONMENT_URL }}
          app-id: ${{ vars.TEST_CLIENT_ID }}
          client-secret: ${{ secrets.TEST_CLIENT_SECRET }}
          tenant-id: ${{ vars.TENANTID }}
          solution-file: ${{ env.SOLUTION_EXPORTED_FOLDER }}/${{ env.solution_name }}.zip
          force-overwrite: true
          publish-changes: true

      - name: Export solution as managed
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ vars.TEST_ENVIRONMENT_URL }}
          app-id: ${{ vars.TEST_CLIENT_ID }}
          client-secret: ${{ secrets.TEST_CLIENT_SECRET }}
          tenant-id: ${{ vars.TENANTID }}
          solution-name: ${{ env.solution_name }}
          managed: true
          solution-output-file: ${{ env.SOLUTION_EXPORTED_FOLDER }}/${{ env.solution_name }}-managed.zip

      - name: Publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: managedSolution
          path: ${{ env.SOLUTION_EXPORTED_FOLDER }}/${{ env.solution_name }}-managed.zip

